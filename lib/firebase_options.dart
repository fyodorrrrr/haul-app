// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // FIXED: Using your real Firebase project configuration
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyC7Q9uzlb8TubKnbDfkva0IM2SQAMv2k64', // You'll need to get this from Firebase Console
    appId: '1:1037279820884:web:your-web-app-id', // Add web app to Firebase to get this
    messagingSenderId: '1037279820884',
    projectId: 'haul-thrift-shop', // FIXED: Your real project ID
    authDomain: 'haul-thrift-shop.firebaseapp.com', // FIXED: Your real domain
    storageBucket: 'haul-thrift-shop.firebasestorage.app', // FIXED: Your real storage bucket
    measurementId: 'G-MEASUREMENT123', // You'll get this when you add web app
  );

  // FIXED: Using your real Android configuration from google-services.json
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyC7Q9uzlb8TubKnbDfkva0IM2SQAMv2k64', // From your Firebase project
    appId: '1:1037279820884:android:e12c15a324d75c08b3c1c1', // FIXED: From your google-services.json
    messagingSenderId: '1037279820884', // FIXED: Your real sender ID
    projectId: 'haul-thrift-shop', // FIXED: Your real project ID
    storageBucket: 'haul-thrift-shop.firebasestorage.app', // FIXED: Your real storage bucket
  );

  // For iOS (if you plan to add iOS support later)
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyC7Q9uzlb8TubKnbDfkva0IM2SQAMv2k64', // You'll need to get iOS-specific key
    appId: '1:1037279820884:ios:your-ios-app-id', // You'll need to add iOS app to Firebase
    messagingSenderId: '1037279820884',
    projectId: 'haul-thrift-shop',
    storageBucket: 'haul-thrift-shop.firebasestorage.app',
    iosBundleId: 'com.example.haul',
  );

  // For macOS (if you plan to add macOS support later)
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyC7Q9uzlb8TubKnbDfkva0IM2SQAMv2k64', // You'll need to get macOS-specific key
    appId: '1:1037279820884:macos:your-macos-app-id', // You'll need to add macOS app to Firebase
    messagingSenderId: '1037279820884',
    projectId: 'haul-thrift-shop',
    storageBucket: 'haul-thrift-shop.firebasestorage.app',
    iosBundleId: 'com.example.haul',
  );
}